{"meta":{"title":"KyleSun的个人博客","subtitle":"","description":"","author":"KyleSun","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"","slug":"765e6122-8c83-4dad-b4cc-d8ad258bc7be_Export-42f8033b-2ceb-4f23-9cbf-5b5afdaaf3e4/Git 36a3c11d34a3457a8baf2df8c99654a4/git常用指令 3ad4a7e8fc784c54959f877fc4cc9226","date":"2023-07-24T23:37:46.000Z","updated":"2023-07-24T23:37:46.000Z","comments":true,"path":"2023/07/25/765e6122-8c83-4dad-b4cc-d8ad258bc7be_Export-42f8033b-2ceb-4f23-9cbf-5b5afdaaf3e4/Git 36a3c11d34a3457a8baf2df8c99654a4/git常用指令 3ad4a7e8fc784c54959f877fc4cc9226/","link":"","permalink":"http://example.com/2023/07/25/765e6122-8c83-4dad-b4cc-d8ad258bc7be_Export-42f8033b-2ceb-4f23-9cbf-5b5afdaaf3e4/Git%2036a3c11d34a3457a8baf2df8c99654a4/git%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%203ad4a7e8fc784c54959f877fc4cc9226/","excerpt":"","text":"git常用指令一、基本操作指令git init：初始化一个新的Git仓库。 git add &lt;filename&gt;：将文件添加到Git索引中。 git commit -m &quot;Commit message&quot;：提交更改，并附上提交消息。 git status：查看当前Git仓库的状态。 二、分支管理指令git branch：列出所有分支。 git branch &lt;branchname&gt;：创建一个新的分支。 git branch -d &lt;branchname&gt;：删除指定的分支。 git branch -a：列出本地和远程所有分支。 git branch -m &lt;oldbranchname&gt; &lt;newbranchname&gt;：将指定的分支重命名。 git checkout &lt;branchname&gt;：切换到指定的分支。 git checkout -b &lt;branchname&gt;：创建一个新的分支，并切换到该分支。 git merge &lt;branchname&gt;：将指定分支合并到当前分支。 git push &lt;remote&gt; &lt;branch&gt;：将本地分支推送到远程分支。 git push &lt;remote&gt; :&lt;branchname&gt;：删除远程分支。 git pull &lt;remote&gt; &lt;branch&gt;：从远程分支拉取代码并合并到当前分支。 三、远程仓库指令git clone &lt;repository&gt;：从远程仓库克隆整个代码库到本地。 git remote add &lt;name&gt; &lt;url&gt;：将本地代码库与远程仓库进行关联。 git remote -v：显示所有已经与本地仓库关联的远程仓库信息。 git fetch &lt;remote&gt;：从远程仓库拉取最新的代码到本地，但不会自动合并。 git pull &lt;remote&gt; &lt;branch&gt;：从远程仓库拉取最新的代码到本地，并自动合并到当前分支。 git push &lt;remote&gt; &lt;branch&gt;：将本地的代码推送到远程仓库指定分支。 git remote show &lt;remote&gt;：显示指定远程仓库的详细信息，包括分支和标签等。 git remote rename &lt;oldname&gt; &lt;newname&gt;：将已经存在的远程仓库别名进行重命名。 git remote remove &lt;name&gt;：删除指定名称的远程仓库关联。 四、撤销操作指令在Git中，撤销操作包括撤销已提交的修改、撤销已经暂存的修改和取消已经执行的Git命令等。以下是一些常用的Git撤销操作指令： git checkout &lt;file&gt;：将指定文件恢复到上一次提交的状态，也可以使用 git checkout . 恢复所有文件。git reset &lt;file&gt;：将指定文件恢复到上一次未暂存的状态，也可以使用 git reset 恢复所有文件。git reset HEAD &lt;file&gt;：将指定文件从已暂存的状态中恢复到未暂存的状态。git revert &lt;commit&gt;：撤销指定的提交，生成一个新的提交以恢复先前的状态。git stash：将当前的修改暂存起来，以便稍后恢复。git stash pop：将最近一次暂存的修改还原回来，并将暂存的修改从堆栈中移除。git cherry-pick &lt;commit&gt;：将指定的提交合并到当前分支中。git commit --amend：修改上一次提交的信息 五、查看日志指令git log：查看Git仓库的提交历史。 git diff：查看文件的变更记录。 git log --graph：查看分支历史记录的图形表示。 六、其他操作指令.gitignore：忽略不需要跟踪的文件。 git tag &lt;tagname&gt;：创建一个新的标签。 git stash：将未提交的更改保存到一个临时的存储区，以便稍后恢复。","categories":[],"tags":[]},{"title":"","slug":"765e6122-8c83-4dad-b4cc-d8ad258bc7be_Export-42f8033b-2ceb-4f23-9cbf-5b5afdaaf3e4/Git 36a3c11d34a3457a8baf2df8c99654a4/git基础教程 3987174e986f43b681229327352567b0","date":"2023-07-24T23:37:46.000Z","updated":"2023-07-24T23:37:46.000Z","comments":true,"path":"2023/07/25/765e6122-8c83-4dad-b4cc-d8ad258bc7be_Export-42f8033b-2ceb-4f23-9cbf-5b5afdaaf3e4/Git 36a3c11d34a3457a8baf2df8c99654a4/git基础教程 3987174e986f43b681229327352567b0/","link":"","permalink":"http://example.com/2023/07/25/765e6122-8c83-4dad-b4cc-d8ad258bc7be_Export-42f8033b-2ceb-4f23-9cbf-5b5afdaaf3e4/Git%2036a3c11d34a3457a8baf2df8c99654a4/git%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%203987174e986f43b681229327352567b0/","excerpt":"","text":"git基础教程一、安装Git 首先，您需要安装Git。您可以从官方网站https://git-scm.com/downloads 下载安装程序，然后按照安装向导完成安装过程。 初始化仓库 要开始使用Git，您需要在您的计算机上创建一个Git仓库。要初始化一个新的Git仓库，请在命令行中导航到您的项目目录并运行以下命令： 1git init 这将在当前目录下创建一个新的Git仓库。 二、添加和提交文件 一旦您的Git仓库被初始化，您可以将文件添加到Git中。要添加文件，请运行以下命令： 1git add &lt;filename&gt; 要提交添加的文件，请运行以下命令： 1git commit -m &quot;message&quot; 在提交时，您需要提供提交消息，以便其他开发人员了解您所做的更改。 三、查看历史记录 要查看Git仓库的历史记录，请运行以下命令： 1git log 这将显示所有提交的历史记录，包括每个提交的作者，提交日期和提交消息。 四、分支管理 Git还允许您创建和管理分支。分支是一个从主分支派生的副本，您可以在其中进行修改，而不会影响主分支。要创建分支，请运行以下命令： 1git branch &lt;branchname&gt; 要切换到新分支，请运行以下命令： 1git checkout &lt;branchname&gt; 在您完成对分支的更改后，您可以将其合并回主分支。要将分支合并到主分支，请运行以下命令： 1git merge &lt;branchname&gt; 这将把您对分支所做的更改合并到主分支中。 五、远程仓库 最后，您可能需要将Git仓库与远程仓库（如GitHub）同步。要将您的本地仓库上传到远程仓库，请运行以下命令： 12git remote add origin &lt;remote repository URL&gt; git push origin master 这将把您的本地仓库与远程仓库同步，并将您的更改上传到远程仓库中。","categories":[],"tags":[]},{"title":"","slug":"765e6122-8c83-4dad-b4cc-d8ad258bc7be_Export-42f8033b-2ceb-4f23-9cbf-5b5afdaaf3e4/Git 36a3c11d34a3457a8baf2df8c99654a4/git概述 aeb02741c6b848829094da8e1ee7eebc","date":"2023-07-24T23:37:46.000Z","updated":"2023-07-24T23:37:46.000Z","comments":true,"path":"2023/07/25/765e6122-8c83-4dad-b4cc-d8ad258bc7be_Export-42f8033b-2ceb-4f23-9cbf-5b5afdaaf3e4/Git 36a3c11d34a3457a8baf2df8c99654a4/git概述 aeb02741c6b848829094da8e1ee7eebc/","link":"","permalink":"http://example.com/2023/07/25/765e6122-8c83-4dad-b4cc-d8ad258bc7be_Export-42f8033b-2ceb-4f23-9cbf-5b5afdaaf3e4/Git%2036a3c11d34a3457a8baf2df8c99654a4/git%E6%A6%82%E8%BF%B0%20aeb02741c6b848829094da8e1ee7eebc/","excerpt":"","text":"git概述一、四个工作区域在Git中，有四个不同的工作区域，分别是工作区（Working Directory）、暂存区（Index）、本地仓库（Local Repository）和远程仓库（Remote Repository）。 工作区（Working Directory）：指项目所在的目录，也就是用户直接进行文件修改和操作的地方。在工作区中可以进行任意修改、添加、删除等操作，但这些修改不会被记录到Git仓库中。 暂存区（Index）：暂存区是Git仓库中的一个虚拟区域，用于暂存将要提交的修改。通过 git add 命令将工作区中的修改添加到暂存区中，表示这些修改已经准备好被提交了。暂存区的目的是为了提供更加灵活的提交方式，允许用户将修改分成多个提交，以便更好地管理和控制项目的版本。 本地仓库（Local Repository）：本地仓库是存储着项目历史记录的数据库，包括了所有版本的提交和分支等信息。每个本地仓库都包含一个 .git 目录，该目录包含了所有的Git元数据，如对象库、分支、标签等信息。 远程仓库（Remote Repository）：远程仓库是存储着项目的一个备份，通常位于网络上的其他计算机或服务器上。远程仓库可以通过 git clone 命令进行克隆，或者通过 git remote 命令进行连接和管理。远程仓库允许多人协作开发同一个项目，通过推送（push）和拉取（pull）操作，可以在本地仓库和远程仓库之间进行同步。 这四个工作区域在Git中扮演着不同的角色和功能，通过它们的配合，可以实现对项目的版本控制、协作开发和代码管理等功能。 二、五种状态在Git中，一个文件可以处于以下5种状态之一： 未跟踪（Untracked）：文件没有被Git追踪，即没有在Git的版本控制下。 已修改（Modified）：文件已经被修改，但还没有被添加到Git的暂存区。 已暂存（Staged）：文件已经被添加到Git的暂存区，等待被提交到Git仓库中。 已提交（Committed）：文件已经被提交到Git仓库中，即已经保存到Git的历史记录中。 已忽略（Ignored）：文件被添加到了.gitignore文件中，Git会忽略这些文件，不会被追踪或提交到Git仓库中。 通过 git status 命令可以查看当前工作目录下文件的状态，以及跟踪和未跟踪的文件列表。根据文件的状态，可以使用不同的Git命令进行相应的操作，如 git add 将文件添加到暂存区，git commit 将文件提交到仓库中，git rm 删除文件等。","categories":[],"tags":[]},{"title":"git常用指令","slug":"git常用指令","date":"2023-07-24T16:00:00.000Z","updated":"2023-07-25T07:31:08.860Z","comments":true,"path":"2023/07/25/git常用指令/","link":"","permalink":"http://example.com/2023/07/25/git%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/","excerpt":"","text":"一、基本操作指令git init：初始化一个新的Git仓库。 git add &lt;filename&gt;：将文件添加到Git索引中。 git commit -m &quot;Commit message&quot;：提交更改，并附上提交消息。 git status：查看当前Git仓库的状态。 二、分支管理指令git branch：列出所有分支。 git branch &lt;branchname&gt;：创建一个新的分支。 git branch -d &lt;branchname&gt;：删除指定的分支。 git branch -a：列出本地和远程所有分支。 git branch -m &lt;oldbranchname&gt; &lt;newbranchname&gt;：将指定的分支重命名。 git checkout &lt;branchname&gt;：切换到指定的分支。 git checkout -b &lt;branchname&gt;：创建一个新的分支，并切换到该分支。 git merge &lt;branchname&gt;：将指定分支合并到当前分支。 git push &lt;remote&gt; &lt;branch&gt;：将本地分支推送到远程分支。 git push &lt;remote&gt; :&lt;branchname&gt;：删除远程分支。 git pull &lt;remote&gt; &lt;branch&gt;：从远程分支拉取代码并合并到当前分支。 三、远程仓库指令git clone &lt;repository&gt;：从远程仓库克隆整个代码库到本地。 git remote add &lt;name&gt; &lt;url&gt;：将本地代码库与远程仓库进行关联。 git remote -v：显示所有已经与本地仓库关联的远程仓库信息。 git fetch &lt;remote&gt;：从远程仓库拉取最新的代码到本地，但不会自动合并。 git pull &lt;remote&gt; &lt;branch&gt;：从远程仓库拉取最新的代码到本地，并自动合并到当前分支。 git push &lt;remote&gt; &lt;branch&gt;：将本地的代码推送到远程仓库指定分支。 git remote show &lt;remote&gt;：显示指定远程仓库的详细信息，包括分支和标签等。 git remote rename &lt;oldname&gt; &lt;newname&gt;：将已经存在的远程仓库别名进行重命名。 git remote remove &lt;name&gt;：删除指定名称的远程仓库关联。 四、撤销操作指令在Git中，撤销操作包括撤销已提交的修改、撤销已经暂存的修改和取消已经执行的Git命令等。以下是一些常用的Git撤销操作指令： git checkout &lt;file&gt;：将指定文件恢复到上一次提交的状态，也可以使用 git checkout . 恢复所有文件。git reset &lt;file&gt;：将指定文件恢复到上一次未暂存的状态，也可以使用 git reset 恢复所有文件。git reset HEAD &lt;file&gt;：将指定文件从已暂存的状态中恢复到未暂存的状态。git revert &lt;commit&gt;：撤销指定的提交，生成一个新的提交以恢复先前的状态。git stash：将当前的修改暂存起来，以便稍后恢复。git stash pop：将最近一次暂存的修改还原回来，并将暂存的修改从堆栈中移除。git cherry-pick &lt;commit&gt;：将指定的提交合并到当前分支中。git commit --amend：修改上一次提交的信息 五、查看日志指令git log：查看Git仓库的提交历史。 git diff：查看文件的变更记录。 git log --graph：查看分支历史记录的图形表示。 六、其他操作指令.gitignore：忽略不需要跟踪的文件。 git tag &lt;tagname&gt;：创建一个新的标签。 git stash：将未提交的更改保存到一个临时的存储区，以便稍后恢复。","categories":[{"name":"工作","slug":"工作","permalink":"http://example.com/categories/%E5%B7%A5%E4%BD%9C/"}],"tags":[{"name":"Git","slug":"Git","permalink":"http://example.com/tags/Git/"}]},{"title":"git常用指令","slug":"Git教程","date":"2023-07-24T16:00:00.000Z","updated":"2023-07-25T07:37:14.595Z","comments":true,"path":"2023/07/25/Git教程/","link":"","permalink":"http://example.com/2023/07/25/Git%E6%95%99%E7%A8%8B/","excerpt":"","text":"**“闻道有先后，术业有专攻”——《韩愈·师说》** git概述 git基础教程 git常用指令","categories":[{"name":"工作","slug":"工作","permalink":"http://example.com/categories/%E5%B7%A5%E4%BD%9C/"}],"tags":[{"name":"Git","slug":"Git","permalink":"http://example.com/tags/Git/"}]},{"title":"Git教程","slug":"765e6122-8c83-4dad-b4cc-d8ad258bc7be_Export-42f8033b-2ceb-4f23-9cbf-5b5afdaaf3e4/Git 36a3c11d34a3457a8baf2df8c99654a4","date":"2023-07-24T16:00:00.000Z","updated":"2023-07-25T07:39:00.293Z","comments":true,"path":"2023/07/25/765e6122-8c83-4dad-b4cc-d8ad258bc7be_Export-42f8033b-2ceb-4f23-9cbf-5b5afdaaf3e4/Git 36a3c11d34a3457a8baf2df8c99654a4/","link":"","permalink":"http://example.com/2023/07/25/765e6122-8c83-4dad-b4cc-d8ad258bc7be_Export-42f8033b-2ceb-4f23-9cbf-5b5afdaaf3e4/Git%2036a3c11d34a3457a8baf2df8c99654a4/","excerpt":"","text":"**“闻道有先后，术业有专攻”——《韩愈·师说》** git概述 git基础教程 git常用指令","categories":[{"name":"工作","slug":"工作","permalink":"http://example.com/categories/%E5%B7%A5%E4%BD%9C/"}],"tags":[{"name":"Git","slug":"Git","permalink":"http://example.com/tags/Git/"}]}],"categories":[{"name":"工作","slug":"工作","permalink":"http://example.com/categories/%E5%B7%A5%E4%BD%9C/"}],"tags":[{"name":"Git","slug":"Git","permalink":"http://example.com/tags/Git/"}]}