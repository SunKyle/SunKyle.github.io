{"meta":{"title":"KyleSun的个人博客","subtitle":"","description":"","author":"KyleSun","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"git常用指令","slug":"git常用指令","date":"2023-07-24T16:00:00.000Z","updated":"2023-07-25T07:27:36.188Z","comments":true,"path":"2023/07/25/git常用指令/","link":"","permalink":"http://example.com/2023/07/25/git%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/","excerpt":"","text":"一、基本操作指令git init：初始化一个新的Git仓库。 git add &lt;filename&gt;：将文件添加到Git索引中。 git commit -m &quot;Commit message&quot;：提交更改，并附上提交消息。 git status：查看当前Git仓库的状态。 二、分支管理指令git branch：列出所有分支。 git branch &lt;branchname&gt;：创建一个新的分支。 git branch -d &lt;branchname&gt;：删除指定的分支。 git branch -a：列出本地和远程所有分支。 git branch -m &lt;oldbranchname&gt; &lt;newbranchname&gt;：将指定的分支重命名。 git checkout &lt;branchname&gt;：切换到指定的分支。 git checkout -b &lt;branchname&gt;：创建一个新的分支，并切换到该分支。 git merge &lt;branchname&gt;：将指定分支合并到当前分支。 git push &lt;remote&gt; &lt;branch&gt;：将本地分支推送到远程分支。 git push &lt;remote&gt; :&lt;branchname&gt;：删除远程分支。 git pull &lt;remote&gt; &lt;branch&gt;：从远程分支拉取代码并合并到当前分支。 三、远程仓库指令git clone &lt;repository&gt;：从远程仓库克隆整个代码库到本地。 git remote add &lt;name&gt; &lt;url&gt;：将本地代码库与远程仓库进行关联。 git remote -v：显示所有已经与本地仓库关联的远程仓库信息。 git fetch &lt;remote&gt;：从远程仓库拉取最新的代码到本地，但不会自动合并。 git pull &lt;remote&gt; &lt;branch&gt;：从远程仓库拉取最新的代码到本地，并自动合并到当前分支。 git push &lt;remote&gt; &lt;branch&gt;：将本地的代码推送到远程仓库指定分支。 git remote show &lt;remote&gt;：显示指定远程仓库的详细信息，包括分支和标签等。 git remote rename &lt;oldname&gt; &lt;newname&gt;：将已经存在的远程仓库别名进行重命名。 git remote remove &lt;name&gt;：删除指定名称的远程仓库关联。 四、撤销操作指令在Git中，撤销操作包括撤销已提交的修改、撤销已经暂存的修改和取消已经执行的Git命令等。以下是一些常用的Git撤销操作指令： git checkout &lt;file&gt;：将指定文件恢复到上一次提交的状态，也可以使用 git checkout . 恢复所有文件。git reset &lt;file&gt;：将指定文件恢复到上一次未暂存的状态，也可以使用 git reset 恢复所有文件。git reset HEAD &lt;file&gt;：将指定文件从已暂存的状态中恢复到未暂存的状态。git revert &lt;commit&gt;：撤销指定的提交，生成一个新的提交以恢复先前的状态。git stash：将当前的修改暂存起来，以便稍后恢复。git stash pop：将最近一次暂存的修改还原回来，并将暂存的修改从堆栈中移除。git cherry-pick &lt;commit&gt;：将指定的提交合并到当前分支中。git commit --amend：修改上一次提交的信息 五、查看日志指令git log：查看Git仓库的提交历史。 git diff：查看文件的变更记录。 git log --graph：查看分支历史记录的图形表示。 六、其他操作指令.gitignore：忽略不需要跟踪的文件。 git tag &lt;tagname&gt;：创建一个新的标签。 git stash：将未提交的更改保存到一个临时的存储区，以便稍后恢复。","categories":[{"name":"Git","slug":"Git","permalink":"http://example.com/categories/Git/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://example.com/tags/Hexo/"},{"name":"Blogging","slug":"Blogging","permalink":"http://example.com/tags/Blogging/"}]},{"title":"Hello World","slug":"hello-world","date":"2023-07-24T07:46:33.033Z","updated":"2023-07-24T07:46:33.033Z","comments":true,"path":"2023/07/24/hello-world/","link":"","permalink":"http://example.com/2023/07/24/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"Git","slug":"Git","permalink":"http://example.com/categories/Git/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://example.com/tags/Hexo/"},{"name":"Blogging","slug":"Blogging","permalink":"http://example.com/tags/Blogging/"}]}